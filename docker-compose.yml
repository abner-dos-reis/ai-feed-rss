version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: ai-feed-rss-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ai_feed_rss
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "127.0.0.1:7202:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - ai-feed-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ai_feed_rss"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-feed-rss-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:7203:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-feed-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-feed-rss-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@database:5432/ai_feed_rss
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - SECRET_KEY=your-secret-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEBUG=1
    ports:
      - "127.0.0.1:7201:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - ai-feed-network
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-feed-rss-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:7201
      - REACT_APP_ENVIRONMENT=development
    ports:
      - "127.0.0.1:7200:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - ai-feed-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: ai-feed-rss-nginx
    restart: unless-stopped
    ports:
      - "127.0.0.1:7204:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ai-feed-network
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ai-feed-network:
    driver: bridge